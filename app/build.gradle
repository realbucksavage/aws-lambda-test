/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.3/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    runtimeOnly 'org.postgresql:postgresql:42.7.3'

    implementation 'com.amazonaws:aws-java-sdk-rds:1.12.710'
    implementation 'com.zaxxer:HikariCP:5.1.0'

    implementation 'com.amazonaws:aws-lambda-java-core:1.2.1'
    implementation 'com.amazonaws:aws-lambda-java-events:3.11.0'
    implementation 'com.google.code.gson:gson:2.8.8'
    implementation 'ch.qos.logback:logback-classic:1.2.6'
    implementation 'org.slf4j:slf4j-api:1.7.32'
    implementation 'com.auth0:java-jwt:3.18.1'

    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:32.1.1-jre'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

shadowJar {
    archiveClassifier.set('') // Set classifier to empty to replace the default jar
    manifest {
        attributes(
                'Main-Class': 'org.haloconnect.handlers.NotificationsHandler'
        )
    }
    mergeServiceFiles()
}

artifacts {
    archives shadowJar
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
